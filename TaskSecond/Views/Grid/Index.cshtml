@{
    ViewBag.Title = "Home Page";
}

@(Html.Kendo().Grid<TaskSecond.Models.ViewModel>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(e => e.BookId);
            columns.Bound(e => e.Pages);
            columns.Bound(e => e.Genre);
            columns.Bound(e => e.Publisher);
            columns.Bound(e => e.Authors).ClientTemplate(

                 Html.Kendo().MultiSelect().Name("multi#=BookId#")
                    .DataTextField("AuthorName")
                    .DataValueField("AuthorId")
                    .BindTo((IEnumerable<TaskSecond.Models.Author>)ViewData["authors"]) /*TaskSecond.Models.ViewModel*/
                    .Events(e => e.Change("change"))
                    .ToClientTemplate().ToHtmlString()
                );
        })
        .Pageable()
        .Events(e => e.DataBound("dataBound"))
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(5)
            .Read(read => read.Action("Books_Read", "Grid"))
            .ServerOperation(false))
)

<script type="text/javascript">
    function dataBound(e) {
        var grid = this;
        grid.tbody.children().each(function () {
            var dataitem = grid.dataItem(this),
                row = $(this);
            eval(row.find("script").html());
            //var multiSelect = $("#multiselect").data("kendoMultiSelect");
            var multiSelect = $(this).find("select").data("kendoMultiSelect");
            multiSelect.value(dataitem.Authors.map(function (i) { return i.AuthorId }));
        });
    }

    function change(e) {
        var row = this.element.closest("tr"),
            model = $("#grid").data("kendoGrid").dataItem(row);
        model.set("Authors", this.dataItems());
    }
</script>
